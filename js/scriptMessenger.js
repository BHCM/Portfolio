document.addEventListener('DOMContentLoaded', function() {
    const messageContainer = document.querySelector('.message-container');
    const databaseContainer = document.querySelector('.database-container');
    const messageInput = document.getElementById('message-input');
    const smileyContainer = document.querySelector('.smiley-container');
    const sendButton = document.getElementById('send-button'); 
    const smileyButtons = document.querySelectorAll('.smiley-container .smiley');
    let typingTimeout; // D√©finir la variable typingTimeout

    // Liste des smileys
    const smileys = [
        'üòä', 'üòÇ', 'üòç', 'üòé', 'ü§î', 'üòú', 'üòÅ', 'üòã', 'üòò', 'üòÜ',
        'üòá', 'üòâ', 'üòÑ', 'üòè', 'üò¨', 'üòå', 'üòù', 'üòõ', 'üò§', 'üò´',
        'üò¥', 'üò¢', 'üò≠', 'üòì', 'üò©', 'üòî', 'üòë', 'üò∂', 'üò™', 'üò∑',
        'üòã', 'üò≤', 'üòµ', 'üòê', 'üòØ', 'üò¶', 'üòß', 'üò®', 'üò∞', 'üò°',
        'üò†', 'üòà', 'üëø', 'üíÄ', '‚ò†Ô∏è', 'üí©', 'ü§°', 'üëπ', 'üë∫', 'üëª',
        'üëΩ', 'üëæ', 'ü§ñ', 'üéÉ', 'üò∫', 'üò∏', 'üòπ', 'üòª', 'üòº', 'üòΩ',
        'üôÄ', 'üòø', 'üòæ', 'üôà', 'üôâ', 'üôä', 'üíã', 'üíå', 'üíò', 'üíù',
        'üíñ', 'üíó', 'üíì', 'üíû', 'üíï', 'üíú', 'üíõ', 'üíö', 'üíô', 'üß°',
        '‚ù§Ô∏è', 'üíî', '‚ù£Ô∏è', 'üí§', 'üí¢', 'üí•', 'üí´', 'üí¶', 'üí®', 'üï≥Ô∏è'
    ];


    // Afficher la liste des smileys
    smileys.forEach(smiley => {
    // Pour chaque smiley dans la liste
    const smileyButton = document.createElement('button'); // Cr√©er un bouton pour le smiley
    smileyButton.textContent = smiley; // D√©finir le texte du bouton comme le smiley actuel
    smileyButton.addEventListener('click', function() {
        // Ajouter un √©couteur d'√©v√©nements pour le clic sur le bouton
        messageInput.value += smiley; // Ajouter le smiley au champ de saisie de texte
        messageInput.focus(); // Mettre le focus sur le champ de saisie de texte apr√®s avoir ajout√© le smiley
    });
    smileyContainer.appendChild(smileyButton); // Ajouter le bouton de smiley au conteneur de smileys dans l'interface utilisateur
    });


    // Fonction pour envoyer un message
    function sendMessage() {
        // R√©cup√©rer le texte du champ de saisie de texte en supprimant les espaces vides au d√©but et √† la fin
        const messageText = messageInput.value.trim();
        // V√©rifier si le texte du message n'est pas vide
        if (messageText !== '') {
            // Cr√©er un nouvel √©l√©ment div pour repr√©senter le message
            const message = document.createElement('div');
            // Ajouter la classe "message" √† l'√©l√©ment div pour le style
            message.classList.add('message');
            // D√©finir le contenu textuel de l'√©l√©ment div comme le texte du message
            message.textContent = messageText;
            // Ajouter l'√©l√©ment de message au conteneur des messages dans l'interface utilisateur
            messageContainer.appendChild(message);
            // Stocker le message dans la base de donn√©es simul√©e (ajouter un √©l√©ment div avec le m√™me contenu textuel)
            const messageEntry = document.createElement('div');
            messageEntry.textContent = messageText;
            databaseContainer.appendChild(messageEntry);
            // Effacer le contenu du champ de saisie apr√®s l'envoi du message
            messageInput.value = '';
        }
    }


    // √âcouter l'√©v√©nement "keypress" pour envoyer le message lorsque la touche "Enter" est press√©e
    messageInput.addEventListener('keypress', function(event) {
        // V√©rifier si la touche press√©e est la touche "Enter"
        if (event.key === 'Enter') {
            // Appeler la fonction sendMessage pour envoyer le message
            sendMessage();
        }
    });

    // √âcouter l'√©v√©nement du clic sur le bouton "Envoyer"
        sendButton.addEventListener('click', sendMessage);

    // Fonction pour afficher un message lorsque l'utilisateur commence √† taper
        messageInput.addEventListener('keypress', function() {
            // Effacer le d√©lai d'attente pr√©c√©dent s'il y en a un
            clearTimeout(typingTimeout);
            // Afficher le message "Un utilisateur r√©dige un message..." dans le conteneur des messages
            messageContainer.textContent = "Un utilisateur r√©dige un message...";
            // D√©finir un d√©lai d'attente avant d'effacer le message
            typingTimeout = setTimeout(() => {
                messageContainer.textContent = ""; // Effacer le message apr√®s 2 secondes
            }, 2000);
        });


});
